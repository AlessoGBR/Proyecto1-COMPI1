package com.mycompany.back_compi1.Parsers.sHTTP;

import java_cup.runtime.*;
import com.mycompany.back_compi1.Parsers.SHTTPRequest;
import java.util.ArrayList;
import java.util.List;

parser code{:

    private SHTTPRequest request;

    public SHTTPRequest getRequest() {
            return request;
    }

    public void syntax_error(Symbol token) {
        System.out.println("Syntax error: " + token.value + " at line " + token.left);
    }

    public void unrecovered_syntax_error(Symbol token) {

    }

:}

terminal String BODY, SCL_TEXT;
terminal GET, POST, PATCH, DELETE, SITIO, PAGINA;

non terminal SHTTPRequest shttp_request;
non terminal String method, target, body,scl_instruction, scl_part;

start with shttp_request;

shttp_request ::= method:m target:t scl_instruction:s body:b
    {:
    System.out.println("Parser: creando SHTTPRequest con:");
            System.out.println(" - Método: " + m);
            System.out.println(" - Target: " + t);
            System.out.println(" - Instrucción: " + s);
            System.out.println(" - Body: " + (b != null ? b : ""));
        RESULT = new SHTTPRequest(m, t, s, (b != null ? b : ""));
    :}
    ;

method  ::=
    GET    {: RESULT = "GET";   :} |
    POST   {: RESULT = "POST";   :} |
    DELETE {: RESULT = "DELETE";   :}|
    PATCH  {: RESULT = "PATCH";   :}|
    ;

target  ::=
    SITIO: sit  {: RESULT = "SITIO";   :} |
    PAGINA: pag  {: RESULT = "PAGINA";   :}
    ;

scl_instruction ::=
    scl_part:part scl_instruction:rest
        {: RESULT = part + " " + rest; :}
    | scl_part:part
        {: RESULT = part; :}
    ;

scl_part ::=
    SCL_TEXT:text {: RESULT = text; :}
    | SITIO   {: RESULT = "sitio"; :}
    | PAGINA  {: RESULT = "pagina"; :}
    ;

body ::=  BODY:b {: RESULT = b;    :} |
        {: RESULT = "";:}
  ;

